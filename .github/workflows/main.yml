name: CI Build
on:
  push:
    branches: [main,next]
  pull_request:
    branches:
      - '**'

permissions:
  checks: write
  pages: write
  contents: write
  pull-requests: write

jobs:
  run:
    if: github.repository_owner == 'ghiscoding' || github.repository_owner == 'renovate-bot' || contains(github.event.pull_request.labels.*.name, 'run workflow')
    name: Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20]

    steps:
      - name: Retrieve current Date Time in EST
        shell: bash
        run: echo "START_TIME=$(TZ=":America/New_York" date -R|sed 's/.....$//')" >> $GITHUB_ENV

      - name: Echo date - ${{ env.START_TIME }}
        run: echo ${{ env.START_TIME }}
        
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: Set NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Run pnpm install dependencies
        run: pnpm install

      - run: pnpm --version

      - name: Biome Lint Check
        run: pnpm biome:lint:check

      - name: Biome Format Check
        run: pnpm biome:format:check

      - name: Build Library
        run: pnpm build:lib

      - name: Build Website (GitHub demo site)
        run: pnpm build:demo

      - name: Install Playwright Browsers (chromium)
        run: pnpm exec playwright install chromium

      - name: Start HTTP Server
        run: pnpm serve:demo &

      - name: Run Playwright E2E Tests
        run: pnpm test:e2e

      - name: Upload Event File
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Event File
          path: ${{ github.event_path }}

      - name: Upload E2E Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Playwright E2E Test Results
          path: |
            playwright-report/**/*.xml

      - name: Deploy Demo to gh-pages
        if: |
          github.ref == 'refs/heads/main' &&
          (contains(github.event.head_commit.message, 'chore(release)') || contains(github.event.head_commit.message, '[refresh gh-pages]'))
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./packages/demo/dist
