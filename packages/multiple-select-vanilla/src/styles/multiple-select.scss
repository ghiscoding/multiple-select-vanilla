@import './mixins';
@import './variables';

/*!
 * Multiple-Select-Vanilla styling
 * @author zhixin wen <wenzhixin2010@gmail.com>
 * @contributor Ghislain B.
 */

// create some SVG icons used by the lib
@include createSvgClass("ms-icon-caret", "M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z");
@include createSvgClass("ms-icon-close", "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z");
@include createSvgClass("ms-icon-check", "M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z");
@include createSvgClass("ms-icon-minus", "M20 14H4V10H20");
@include createSvgClass("ms-icon-radio", "M12 3.7c4.6 0 8.3 3.7 8.3 8.3s-3.7 8.3-8.3 8.3-8.3-3.7-8.3-8.3S7.4 3.7 12 3.7z");

.ms-parent, .ms-drop {
  .ms-icon {
    cursor: pointer;
    display: inline-block;
    background-color: currentColor;
    flex-shrink: 0;
    color: var(--ms-icon-color, $ms-icon-color);
    font-size: var(--ms-icon-size, $ms-icon-size);
    height: var(--ms-icon-size, $ms-icon-size);
    width: var(--ms-icon-size, $ms-icon-size);
    &:hover {
      color: var(--ms-icon-color-hover, $ms-icon-color-hover);
    }
  }

  li.hide-radio .icon-checkbox-container {
    display: none;
  }

  .ms-select-all,
  li:not(.hide-radio) {
    .icon-checkbox-container {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      height: var(--ms-checkbox-icon-container-height, $ms-checkbox-icon-container-height);
      width: var(--ms-checkbox-icon-container-width, $ms-checkbox-icon-container-width);
      border: var(--ms-checkbox-icon-container-border, $ms-checkbox-icon-container-border);
      border-radius: 0.125rem;
     
      div {
        font-size: 14px;
        color: var(--ms-checkbox-color, $ms-checkbox-color);
        &:hover {
          color: var(--ms-checkbox-hover-color, $ms-checkbox-hover-color);
        }
        // since we use the div container with a border, we don't actually need an icon for unchecked 
        // BUT since we want to keep the same size, we can simply hide the mask to keep the same size
        &.ms-icon-uncheck {
          visibility: hidden;
        }
      }
      &.radio {
        border-radius: 50%;
      }
      & + span {
        padding-left: var(--ms-label-text-padding-left, $ms-label-text-padding-left);
      }
    }
  }
}

.ms-offscreen {
  clip: rect(0 0 0 0) !important;
  width: 1px !important;
  height: 1px !important;
  border: 0 !important;
  margin: 0 !important;
  padding: 0 !important;
  overflow: hidden !important;
  position: absolute !important;
  outline: 0 !important;
  left: auto !important;
  top: auto !important;
}

.ms-parent {
  display: inline-block;
  position: relative;
  vertical-align: middle;
}

.ms-choice {
  display: flex;
  align-items: center;
  cursor: pointer;
  width: 100%;
  height: 26px;
  overflow: hidden;
  padding: var(--ms-choice-padding, $ms-choice-padding);
  background-color: var(--ms-choice-bgcolor, $ms-choice-bgcolor);
  border: var(--ms-choice-border, $ms-choice-border);
  border-radius: var(--ms-choice-border-radius, $ms-choice-border-radius);
  line-height: var(--ms-choice-line-height, $ms-choice-line-height);
  color: var(--ms-choice-color, $ms-choice-color);
  text-align: var(--ms-choice-text-align, $ms-choice-text-align);
  text-decoration: none;
  user-select: none;
  white-space: nowrap;

  &.disabled {
    border: var(--ms-choice-disabled-border, $ms-choice-disabled-border);
    background-color: var(--ms-choice-disabled-bgcolor, $ms-choice-disabled-bgcolor);
    background-image: none;
    cursor: default;
  }

  > {
    span {
      flex-grow: 1;
      top: 0;
      left: 0;
      right: 20px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      display: block;

      &.ms-placeholder {
        color: var(--ms-placeholder-color, $ms-placeholder-color);
      }
    }
    div.ms-icon-close {
      margin-right: 2px;
    }
    div.ms-icon-caret {
      font-size: var(--ms-chevron-icon-size, $ms-chevron-icon-size);
      &.open {
        transform: scaleY(-1);
      }
    }
  }
}

.ms-drop {
  width: auto;
  min-width: 100%;
  overflow: hidden;
  display: none;
  position: absolute;
  background: var(--ms-drop-background, $ms-drop-background);
  border: var(--ms-drop-border, $ms-drop-border);
  border-radius: var(--ms-drop-border-radius, $ms-drop-border-radius);
  color: var(--ms-drop-color, $ms-drop-color);
  margin-top: var(--ms-drop-margin-top, $ms-drop-margin-top);
  padding: var(--ms-drop-padding, $ms-drop-padding);
  z-index: var(--ms-drop-zindex, $ms-drop-zindex);

  &.bottom {
    top: 100%;
    box-shadow: var(--ms-drop-bottom-box-shadow, $ms-drop-bottom-box-shadow);
  }

  &.top {
    bottom: 100%;
    box-shadow: var(--ms-drop-top-box-shadow, $ms-drop-top-box-shadow);
  }

  .ms-select-all {
    border-bottom: var(--ms-select-all-border-bottom, $ms-select-all-border-bottom);
    line-height: var(--ms-select-all-line-height, $ms-select-all-line-height);
    padding: var(--ms-select-all-padding, $ms-select-all-padding);
    width: 100%;
    &:hover {
      background-color: var(--ms-select-all-text-hover-color, $ms-select-all-text-hover-color);
    }
    &.highlighted {
      background-color: var(--ms-option-highlight-bg-color, $ms-option-highlight-bg-color);
    }

    label {
      display: inline-flex;
      align-items: center;
      font-weight: var(--ms-select-all-text-font-weight, $ms-select-all-text-font-weight);
      padding: var(--ms-select-all-label-padding, $ms-select-all-label-padding);
      border: var(--ms-select-all-label-border, $ms-select-all-label-border);
      color: var(--ms-select-all-text-color, $ms-select-all-text-color);
      width: 100%;
      &:hover {
        cursor: pointer;
        border: var(--ms-select-all-label-hover-border, $ms-select-all-label-hover-border);
      }
      input {
        // hide original input checkbox since we use an SVG over it
        opacity: 0;
        width: 0;
        margin-left: 0;
      }
      div {
        display: inline-flex;
      }
    }
  }

  .ms-ok-button {
    cursor: pointer;
    display: block;
    padding: var(--ms-ok-button-padding, $ms-ok-button-padding);
    width: var(--ms-ok-button-width, $ms-ok-button-width);
    height: var(--ms-ok-button-height, $ms-ok-button-height);
    border-color: var(--ms-ok-button-border-color, $ms-ok-button-border-color);
    border-radius: var(--ms-ok-button-border-radius, $ms-ok-button-border-radius);
    border-width: var(--ms-ok-button-border-width, $ms-ok-button-border-width);
    text-align: var(--ms-ok-button-text-align, $ms-ok-button-text-align);
    color: var(--ms-ok-button-text-color, $ms-ok-button-text-color);
    font-weight: var(--ms-ok-button-font-weight, $ms-ok-button-font-weight);
    background-color: var(--ms-ok-button-bg-color, $ms-ok-button-bg-color);
    &:hover {
      background-color: var(--ms-ok-button-bg-hover-color, $ms-ok-button-bg-hover-color);
      color: var(--ms-ok-button-text-hover-color, $ms-ok-button-text-hover-color);
    }
  }
}

.ms-search {
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  position: relative;
  white-space: nowrap;
  width: 100%;
  margin: var(--ms-search-margin, $ms-search-margin);
  min-height: var(--ms-search-min-height, $ms-search-min-height);
  padding: var(--ms-search-padding, $ms-search-padding);
  z-index: var(--ms-search-zindex, $ms-search-zindex);

  input {
    box-shadow: none;
    font-family: sans-serif;
    height: auto !important;
    width: 100%;
    color: var(--ms-search-input-color, $ms-search-input-color);
    background-color: var(--ms-search-input-bg-color, $ms-search-input-bg-color);
    border: var(--ms-search-input-border, $ms-search-input-border);
    border-radius: var(--ms-search-input-border-radius, $ms-search-input-border-radius);
    min-height: var(--ms-search-input-min-height, $ms-search-input-min-height);
    outline: var(--ms-search-input-outline, $ms-search-input-outline);
    padding: var(--ms-search-input-padding, $ms-search-input-padding);
    margin: var(--ms-search-input-margin, $ms-search-input-margin);
    &::placeholder {
      color: var(--ms-search-input-placeholder, $ms-search-input-placeholder);
    }
  }

  span.ms-icon-close {
    height: var(--ms-icon-size, $ms-icon-size);
    margin: var(--ms-search-icon-close-margin, $ms-search-icon-close-margin);
  }
}

.ms-drop {
  ul {
    overflow: auto;
    outline: var(--ms-drop-outline, $ms-drop-outline);
    margin: var(--ms-drop-list-margin, $ms-drop-list-margin);
    padding: var(--ms-drop-list-padding, $ms-drop-list-padding);
    scrollbar-color: var(--ms-drop-scrollbar-color, $ms-drop-scrollbar-color);

    > li {
      cursor: pointer;
      background-image: none;
      list-style: none;
      position: static;
      align-items: var(--ms-drop-list-item-align-items, $ms-drop-list-item-align-items);
      display: var(--ms-drop-list-item-display, $ms-drop-list-item-display);
      padding: var(--ms-drop-list-item-padding, $ms-drop-list-item-padding);

      .disabled {
        cursor: default;
        font-weight: normal !important;
        opacity: var(--ms-drop-list-item-disabled-opacity, $ms-drop-list-item-disabled-opacity);
        filter: var(--ms-drop-list-item-disabled-filter, $ms-drop-list-item-disabled-filter);
      }

      &.multiple {
        display: block;
        float: left;
      }

      &.group {
        clear: both;
      }

      &.multiple label {
        width: 100%;
        display: block;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      label {
        cursor: pointer;
        display: flex;
        align-items: center;
        font-weight: normal;
        position: relative;
        white-space: nowrap;
        flex: 0 0 100%;
        margin-bottom: var(--ms-label-margin-bottom, $ms-label-margin-bottom);
        min-height: var(--ms-label-min-height, $ms-label-min-height);
        padding: var(--ms-label-padding, $ms-label-padding);

        &.optgroup {
          color: var(--ms-optgroup-color, $ms-optgroup-color);
          font-weight: var(--ms-drop-optgroup-font-weight, $ms-drop-optgroup-font-weight);
        }
      }

      &.hide-radio {
        padding: var(--ms-drop-hide-radio-padding, $ms-drop-hide-radio-padding);

        &:focus,
        &:hover {
          background-color: var(--ms-drop-hide-radio-hover-bgcolor, $ms-drop-hide-radio-hover-bgcolor);
        }

        &.selected {
          color: var(--ms-drop-hide-radio-selected-color, $ms-drop-hide-radio-selected-color);
          background-color: var(--ms-drop-hide-radio-selected-bgcolor, $ms-drop-hide-radio-selected-bgcolor);
        }

        label {
          margin-bottom: var(--ms-drop-hide-radio-label-margin-bottom, $ms-drop-hide-radio-label-margin-bottom);
          padding: var(--ms-drop-hide-radio-label-padding, $ms-drop-hide-radio-label-padding);
        }

        input {
          display: none;
        }
      }

      &.option-level-1 {
        label {
          padding-left: var(--ms-drop-list-item-level1-padding-left, $ms-drop-list-item-level1-padding-left);
        }
      }

      &.option-divider {
        padding: var(--ms-drop-option-divider-padding, $ms-drop-option-divider-padding);
        border-top: var(--ms-drop-option-divider-border-top, $ms-drop-option-divider-border-top);
      }
      &.highlighted {
        background-color: var(--ms-option-highlight-bg-color, $ms-option-highlight-bg-color);
      }
    }
  }

  input {
    &[type='radio'],
    &[type='checkbox'] {
      // make input checkbox invisible but don't hide it since ms-select uses hide for something else
      opacity: 0;
      width: 0;
      position: absolute;
      margin-left: var(--ms-drop-input-margin-left, $ms-drop-input-margin-left);
      margin-top: var(--ms-drop-input-margin-top, $ms-drop-input-margin-top);
      accent-color: var(--ms-checkbox-color, $ms-checkbox-color);
    }
    &:focus { 
      outline: var(--ms-input-focus-outline, $ms-input-focus-outline);
    }
  }

  .ms-no-results {
    display: none;
  }

  .ms-infinite-option {
    height: var(--ms-infinite-empty-option-height, $ms-infinite-empty-option-height);
  }
}
